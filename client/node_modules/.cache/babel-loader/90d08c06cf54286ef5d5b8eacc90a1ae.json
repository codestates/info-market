{"ast":null,"code":"var _jsxFileName = \"/Users/yujihun/Documents/info-market/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from '../src/images/logo.png';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Login from './pages/Login';\nimport Tos from './pages/Tos';\nimport Signup from './pages/Signup';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n  axios.defaults.withCredentials = true; // const T = [];\n\n  /* 로그인상태 변경, 메인페이지 불러옴 */\n\n  const isAuthenticated = () => {// axios\n    //   .get(\n    //     `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/login`,\n    //   )\n    //   .then((res) => {\n    //     setUserInfo(res.data.userInfo);\n    //   })\n    //   .catch((err) => err);\n  };\n  /* 로그인 요청 성공 */\n\n\n  const handleResponseSuccess = () => {\n    isAuthenticated();\n    setIsLogin(true);\n  };\n  /* 로그아웃. 로그인 이후 메인페이지에서 체크 예정*/\n\n\n  const handleLogout = () => {\n    axios.post(`http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/logout`).then(res => {\n      setUserInfo(null);\n      console.log(userInfo);\n      setIsLogin(false);\n    });\n  };\n\n  useEffect(() => {\n    console.log('before', userInfo);\n    isAuthenticated();\n    console.log('after', userInfo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this),\n          handleResponseSuccess: handleResponseSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tos\",\n          element: /*#__PURE__*/_jsxDEV(Tos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2g8GhmTzgD4zOqCqhR2Jdu4vuGo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yujihun/Documents/info-market/client/src/App.js"],"names":["logo","BrowserRouter","Route","Link","Routes","Provider","createStore","Login","Tos","Signup","useState","useEffect","axios","App","isLogin","setIsLogin","userInfo","setUserInfo","defaults","withCredentials","isAuthenticated","handleResponseSuccess","handleLogout","post","then","res","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,MAArC,QAAmD,kBAAnD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACAE,EAAAA,KAAK,CAACM,QAAN,CAAeC,eAAf,GAAiC,IAAjC,CAHa,CAKb;;AAEA;;AACA,QAAMC,eAAe,GAAG,MAAM,CAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD;AAWA;;;AACA,QAAMC,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,eAAe;AACfL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;AAKA;;;AACA,QAAMO,YAAY,GAAG,MAAM;AACzBV,IAAAA,KAAK,CACFW,IADH,CAEK,4EAFL,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARH;AASD,GAVD;;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,QAAtB;AACAI,IAAAA,eAAe;AACfM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,QAArB;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,QAAC,aAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAFX;AAGE,UAAA,qBAAqB,EAAEK;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/DQR,G;;KAAAA,G;AAiET,eAAeA,GAAf","sourcesContent":["import logo from '../src/images/logo.png';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Login from './pages/Login';\nimport Tos from './pages/Tos';\nimport Signup from './pages/Signup';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n  axios.defaults.withCredentials = true;\n\n  // const T = [];\n\n  /* 로그인상태 변경, 메인페이지 불러옴 */\n  const isAuthenticated = () => {\n    // axios\n    //   .get(\n    //     `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/login`,\n    //   )\n    //   .then((res) => {\n    //     setUserInfo(res.data.userInfo);\n    //   })\n    //   .catch((err) => err);\n  };\n\n  /* 로그인 요청 성공 */\n  const handleResponseSuccess = () => {\n    isAuthenticated();\n    setIsLogin(true);\n  };\n\n  /* 로그아웃. 로그인 이후 메인페이지에서 체크 예정*/\n  const handleLogout = () => {\n    axios\n      .post(\n        `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/logout`,\n      )\n      .then((res) => {\n        setUserInfo(null);\n        console.log(userInfo);\n        setIsLogin(false);\n      });\n  };\n\n  useEffect(() => {\n    console.log('before', userInfo);\n    isAuthenticated();\n    console.log('after', userInfo);\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<Login />}\n            handleResponseSuccess={handleResponseSuccess}\n          />\n        </Routes>\n        <Routes>\n          <Route path=\"/tos\" element={<Tos />} />\n        </Routes>\n        <Routes>\n          <Route path=\"/signup\" element={<Signup />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}