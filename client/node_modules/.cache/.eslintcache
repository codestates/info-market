[{"/Users/yujihun/Documents/info-market/client/src/index.js":"1","/Users/yujihun/Documents/info-market/client/src/App.js":"2","/Users/yujihun/Documents/info-market/client/src/pages/Tos.js":"3","/Users/yujihun/Documents/info-market/client/src/pages/Signup.js":"4","/Users/yujihun/Documents/info-market/client/src/pages/Login.js":"5","/Users/yujihun/Documents/info-market/client/src/component/Header.js":"6","/Users/yujihun/Documents/info-market/client/src/component/Footer.js":"7"},{"size":574,"mtime":1650938362509,"results":"8","hashOfConfig":"9"},{"size":1974,"mtime":1650943371650,"results":"10","hashOfConfig":"9"},{"size":4665,"mtime":1650938362509,"results":"11","hashOfConfig":"9"},{"size":3294,"mtime":1650940363271,"results":"12","hashOfConfig":"9"},{"size":3761,"mtime":1650941760569,"results":"13","hashOfConfig":"9"},{"size":1570,"mtime":1650858682743,"results":"14","hashOfConfig":"9"},{"size":659,"mtime":1650858682743,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ubtxcg",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yujihun/Documents/info-market/client/src/index.js",[],[],"/Users/yujihun/Documents/info-market/client/src/App.js",["41","42","43","44","45","46","47"],[],"import logo from '../src/images/logo.png';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Login from './pages/Login';\nimport Tos from './pages/Tos';\nimport Signup from './pages/Signup';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n  axios.defaults.withCredentials = true;\n\n  // const T = [];\n\n  /* 로그인상태 변경, 메인페이지 불러옴 */\n  const isAuthenticated = () => {\n    // axios\n    //   .get(\n    //     `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/login`,\n    //   )\n    //   .then((res) => {\n    //     setUserInfo(res.data.userInfo);\n    //   })\n    //   .catch((err) => err);\n  };\n\n  /* 로그인 요청 성공 */\n  const handleResponseSuccess = () => {\n    isAuthenticated();\n    setIsLogin(true);\n  };\n\n  /* 로그아웃. 로그인 이후 메인페이지에서 체크 예정*/\n  const handleLogout = () => {\n    axios\n      .post(\n        `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/logout`,\n      )\n      .then((res) => {\n        setUserInfo(null);\n        console.log(userInfo);\n        setIsLogin(false);\n      });\n  };\n\n  useEffect(() => {\n    console.log('before', userInfo);\n    isAuthenticated();\n    console.log('after', userInfo);\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<Login />}\n            handleResponseSuccess={handleResponseSuccess}\n          />\n        </Routes>\n        <Routes>\n          <Route path=\"/tos\" element={<Tos />} />\n        </Routes>\n        <Routes>\n          <Route path=\"/signup\" element={<Signup />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/yujihun/Documents/info-market/client/src/pages/Tos.js",[],[],"/Users/yujihun/Documents/info-market/client/src/pages/Signup.js",["48"],[],"import React, { useState } from 'react';\nimport Header from '../component/Header';\nimport Footer from '../component/Footer';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Signup() {\n  const navigate = useNavigate();\n  // const handleCreateId = () => {\n  //   navigate(`/login`)\n  // }\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    password: '',\n    phone: '',\n    nickname: '',\n  });\n\n  const [errMessage, setErrMessage] = useState('');\n  const handleInputValue = (key) => (e) => {\n    setUserInfo({ ...userInfo, [key]: e.target.value });\n  };\n\n  const handleSignup = () => {\n    setIsSignup(true);\n    if (\n      !userInfo.email ||\n      !userInfo.password ||\n      !userInfo.phone ||\n      !userInfo.nickname\n    ) {\n      setErrMessage('모두 입력해 주세요');\n    } else {\n      axios.post(\n        `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/signup`,\n        {\n          email: userInfo.email,\n          password: userInfo.password,\n          phone: userInfo.phone,\n          nickname: userInfo.nickname,\n        },\n        {\n          headers: { Accept: 'application/json' },\n        },\n      );\n      navigate(`/login`);\n    }\n    console.log(userInfo);\n    // 추가적으로 닉네임 중복체크\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"signup\">\n        <div className=\"signup-input\">\n          <h1>회원가입</h1>\n          <div>모든 항목은 필수 입니다</div>\n          <div>\n            <input\n              type=\"email\"\n              className=\"signup-id\"\n              placeholder=\"아이디(email)\"\n              onChange={handleInputValue('email')}\n            ></input>\n            {/* <button>인증</button> */}\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              className=\"signup-password\"\n              placeholder=\"비밀번호\"\n              onChange={handleInputValue('password')}\n            ></input>\n          </div>\n          {/* <div>\n            <input type='password' className='signup-password' placeholder='비밀번호 재확인' onChange={handleInputValue('password')}></input>\n          </div> */}\n\n          <div>\n            <input\n              type=\"tel\"\n              className=\"signup-phone\"\n              placeholder=\"핸드폰 번호\"\n              onChange={handleInputValue('phone')}\n            ></input>\n            {/* <button>인증번호받기</button> */}\n          </div>\n          {/* <div>\n            <input type='text' className='signup-phone-check' placeholder='인증번호' onChange={handleInputValue('phone')}></input>\n            <button>확인</button>\n          </div> */}\n          <div>\n            <input\n              type=\"text\"\n              className=\"signup-name\"\n              placeholder=\"닉네임\"\n              onChange={handleInputValue('nickname')}\n            ></input>\n          </div>\n          <div className=\"signup-button\">\n            <button type=\"submit\" onClick={handleSignup}>\n              회원가입하기\n            </button>\n          </div>\n        </div>\n        <div className=\"alert-box\">{errMessage}</div>\n      </div>\n      <Footer />\n    </>\n  );\n}\nexport default Signup;\n",[],"/Users/yujihun/Documents/info-market/client/src/pages/Login.js",["49"],[],"import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport Header from '../component/Header';\nimport Footer from '../component/Footer';\nimport '../css/Login.css';\nimport logo from '../images/logo.png';\nimport { NavLink } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction Login({ handleResponseSuccess }) {\n  const navigate = useNavigate();\n  const handleRegister = () => {\n    navigate(`/tos`);\n  };\n\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputValue = (key) => (e) => {\n    setLoginInfo({ ...loginInfo, [key]: e.target.value });\n  };\n\n  const handleLogin = () => {\n    if (!loginInfo.email || !loginInfo.password) {\n      setErrorMessage('이메일과 비밀번호를 입력하세요');\n    } else {\n      axios\n        .post(\n          `http://ec2-13-125-246-202.ap-northeast-2.compute.amazonaws.com/auth/login`,\n          {\n            email: loginInfo.email,\n            password: loginInfo.password,\n          },\n          {\n            headers: { Accept: 'application/json' },\n          },\n        )\n        .then((res) => {\n          if (res.status === 200) {\n            handleResponseSuccess();\n            navigate('/main');\n          }\n        })\n        .catch((err) => err);\n    }\n    console.log(loginInfo);\n  };\n\n  const kakaoOauth = useRef();\n  const naverOauth = useRef();\n\n  /* 카카오, 네이버 로그인 관련 부분\n    배포 및 사이트 등록이 완료되면, 해당 도메인을 redirect_uri 등록하여 bit.ly 주소를 받을 수 있음\n    임시로 타 프로젝트와 연동한 부분\n  */\n  const handleOauth = (oauth) => {\n    if (oauth === kakaoOauth) {\n      window.open('https://bit.ly/37DB7qp');\n    }\n    if (oauth === naverOauth) {\n      window.open('https://bit.ly/3rIXmCH');\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <NavLink to=\"/\">\n        <img src={logo} alt=\"logo \" className=\"login-logo\" />\n      </NavLink>\n      <div className=\"login-container\">\n        <div className=\"login-input\">\n          <input\n            type=\"email\"\n            className=\"login-id\"\n            placeholder=\"email을 입력하세요\"\n            onChange={handleInputValue('email')}\n          />\n          <input\n            type=\"password\"\n            className=\"login-password\"\n            placeholder=\"password을 입력하세요\"\n            onChange={handleInputValue('password')}\n          />\n          <div>\n            <button className=\"button\" type=\"submit\" onClick={handleLogin}>\n              로그인\n            </button>\n            {!loginInfo.email && !loginInfo.password ? (\n              <div className=\"alert-box\">{errorMessage}</div>\n            ) : null}\n          </div>\n          <div>\n            <div>\n              <button\n                className=\"kakao-login\"\n                onClick={() => handleOauth(kakaoOauth)}\n                ref={kakaoOauth}\n              >\n                카카오 로그인\n              </button>\n              <button\n                className=\"naver-login\"\n                onClick={() => handleOauth(naverOauth)}\n                ref={naverOauth}\n              >\n                네이버 로그인\n              </button>\n            </div>\n            <div>\n              <button className=\"button\">아이디 찾기</button>\n              <button className=\"button\">비밀번호 찾기</button>\n              <button className=\"button\" onClick={handleRegister}>\n                회원가입\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/yujihun/Documents/info-market/client/src/component/Header.js",["50"],[],"/Users/yujihun/Documents/info-market/client/src/component/Footer.js",["51"],[],{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":3,"column":32,"nodeType":"54","messageId":"55","endLine":3,"endColumn":36},{"ruleId":"52","severity":1,"message":"57","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":18},{"ruleId":"52","severity":1,"message":"58","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":21},{"ruleId":"52","severity":1,"message":"59","line":13,"column":10,"nodeType":"54","messageId":"55","endLine":13,"endColumn":17},{"ruleId":"52","severity":1,"message":"60","line":38,"column":9,"nodeType":"54","messageId":"55","endLine":38,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":54,"column":6,"nodeType":"63","endLine":54,"endColumn":8,"suggestions":"64"},{"ruleId":"52","severity":1,"message":"65","line":13,"column":10,"nodeType":"54","messageId":"55","endLine":13,"endColumn":18},{"ruleId":"52","severity":1,"message":"66","line":9,"column":10,"nodeType":"54","messageId":"55","endLine":9,"endColumn":21},{"ruleId":"52","severity":1,"message":"66","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Provider' is defined but never used.","'createStore' is defined but never used.","'isLogin' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'isSignup' is assigned a value but never used.","'useSelector' is defined but never used.",{"desc":"68","fix":"69"},"Update the dependencies array to be: [userInfo]",{"range":"70","text":"71"},[1406,1408],"[userInfo]"]